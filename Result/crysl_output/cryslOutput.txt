
ProjectBoundaryForAnalysis-01
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.297 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 8 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

Exception in thread "main" java.lang.NullPointerException
	at crypto.constraints.ConstraintSolver.<init>(ConstraintSolver.java:101)
	at crypto.analysis.AnalysisSeedWithSpecification.checkInternalConstraints(AnalysisSeedWithSpecification.java:144)
	at crypto.analysis.AnalysisSeedWithSpecification.execute(AnalysisSeedWithSpecification.java:123)
	at crypto.analysis.CryptoScanner.scan(CryptoScanner.java:83)
	at crypto.HeadlessCryptoScanner$3.internalTransform(HeadlessCryptoScanner.java:292)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at crypto.HeadlessCryptoScanner.analyse(HeadlessCryptoScanner.java:216)
	at crypto.HeadlessCryptoScanner.exec(HeadlessCryptoScanner.java:184)
	at crypto.HeadlessCryptoScanner.main(HeadlessCryptoScanner.java:72)

real	0m19.815s
user	1m10.931s
sys	0m1.131s

ProjectBoundaryForAnalysis-02
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 992.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] secureHash(java.lang.String)>
		SHA-256: 4595c5620245a20782b6014498eabb32b4393c9abf94d29e93df9613870268ba
		Secure: true
	Object:
		Variable: varReplacer97
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer97)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: javax.crypto.spec.SecretKeySpec getSecretKeySpec(java.lang.String)>
		SHA-256: 50daa17189f7d25cb742eb0db3334cf6a33c8bfb1ad6378d620fdaf11fa090d0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer97)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: javax.crypto.spec.SecretKeySpec getSecretKeySpec(java.lang.String)>
		SHA-256: 58c55c2928aeafeb0356686698d97cb0fd3aa2d5f34813f1235db9f3602a68aa
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer93)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] aesEncrypt(java.lang.String,java.lang.String)>
		SHA-256: 1d2629fe8fd5cc57bfb2c9f1ad1611059b0941953a483413fbdc604e8fb0d639
		Secure: false
	Object:
		Variable: r7
		Type: java.security.MessageDigest
		Statement: r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer91)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] secureHash(java.lang.String)>
		SHA-256: 849a9464163021d3b057c9d0dbc7649548b7ec7642fb216fac10da164d619645
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: java.lang.String aesDecrypt(byte[],java.lang.String)>
		SHA-256: 690ebfe40ad976f85aa17a50c2d3706db9afb99318cf877322831217c140be03
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: java.lang.String aesDecrypt(byte[],java.lang.String)>
		SHA-256: b468176250e675042ec939a4c4bb4ac42b0bd724273ac38130714b9072d8731
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r6 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] aesEncrypt(java.lang.String,java.lang.String)>
		SHA-256: 63bc638db72d0332aecb02709ac5e1455cd3e0bc94947268064d3bd6de6533e2
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] aesEncrypt(java.lang.String,java.lang.String)>
		SHA-256: ca2461489f035c9a3980eb3a6f53cef87221200923d678741471862d35a2f8bf
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] secureHash(java.lang.String)>
		SHA-256: 303824adbce793a6f725af38b71f377fbe87ec26fee06c8d0fc1eb24320c32ed
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer94)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: java.lang.String aesDecrypt(byte[],java.lang.String)>
		SHA-256: bd946f45cc69943b9acc5c7063bd9bbb3926bc33befda3aa8071e74472984161
		Secure: false

Findings in Java Class: org.apache.deltaspike.core.impl.crypto.DefaultCipherService

	 in Method: byte[] aesEncrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer92, r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1d2629fe8fd5cc57bfb2c9f1ad1611059b0941953a483413fbdc604e8fb0d639)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer93)


	 in Method: java.lang.String aesDecrypt(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer95, r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #bd946f45cc69943b9acc5c7063bd9bbb3926bc33befda3aa8071e74472984161)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer94)


	 in Method: javax.crypto.spec.SecretKeySpec getSecretKeySpec(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer97)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
	ConstraintError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.369 s

real	0m6.945s
user	0m27.480s
sys	0m0.576s

ProjectBoundaryForAnalysis-03
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.415 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 28 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 48
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 49
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 51
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 51
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 53
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 54
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 56
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 56
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 59
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 59
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 59
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 60
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 61
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: r6
		Type: javax.crypto.Mac
		Statement: r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer71)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 493a6e4ef001a1f384288514234f56839561874865a9f0f6dd6071cad99dd5eb
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer76)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: ac578054f0471a3e285acfbac1e58feba95e3c149d001c200f64a269c3a0b620
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer61)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 47991818126df6232f2a484abb059fd8bfd109d71428d7874c637229dda36afb
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: f245b3bfc8ff34ff0c9300ac9a5d26d8d32b7a07e50e836d8aa01823e1d88a5b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r4.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 9490225e9befb1fb16d8cab9442782a0b2136b5233844f013d4d1442999de0ac
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 5902201ba4a3abc76bd8b66520ca6eac06119edab63feebb7c4b7fb12b400b53
		Secure: false
	Object:
		Variable: varReplacer112
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer112)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: be771abfefaf4b4c1c10f38561c7441a63d2f9d0e68d4f32dd2973ef65841b53
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r5 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 1d3bb8bdab9c500421f13799e4d65ff6220589ad81b7620277d5bf5055eaedce
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 1c68a59e23dc01d625d27a4b52b66bef6d36edc2f9777e3f6095faa877fa06c9
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer143)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: f2781398497dc451febb47f669a86f821b77292b034c7538b857508ce3ef4b10
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer115)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 55e2a3b527f689244d522d12dcb751043ac5373e4004b8e6f8a5dad2f9cc288c
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 6cd0ae2e928014830ed60e77b43d2b6944626717362a899e99a604e0e63d37d3
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: aedeab6d5affb66efa361253db3245ed9741a0d82e4515e972c429897f0ac027
		Secure: true
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer128)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 8345326d83058c34f77d908e3becd2afdac9710123121783bb92755b5c0a3e4a
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 26e82d3ab509d2a9b72f1cef1f0e21c53cf51983d6bab9071c56cd35a9155f7d
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: c76367f88fbef2956e135050d8314b4351f46e7f477b597fa7c36c5847f69630
		Secure: false
	Object:
		Variable: r8
		Type: java.security.MessageDigest
		Statement: r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 11e637e7b7fcfc0c79edda5a875a4151acdf58104fab6fa57e5860d13b9c9ae4
		Secure: true
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer117)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 92f823695b464b5db0fa2e62da6e97b415a0dab55b480da82a0f95ac6c70fa24
		Secure: false
	Object:
		Variable: varReplacer40
		Type: java.lang.String
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer40)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 8e95af2a233b61bbf4be112c8417be8c5d0b89328fae73dec12efa69c058695f
		Secure: false
	Object:
		Variable: varReplacer117
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer117)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 780f3902f3eb2ec9a2eddbf99f1c6a403625f71d9ef087a4895ee0e1a625640
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 1460a25375b65fe8956872a3a1171fee80a862957085509aadfb0c92367e43ce
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 8d96b39ec0997345268c5b7f533b2515d4bf70753e7144016a95cbc441343ace
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 8358cb2d1d5a75124292e3f779fad1638d6165eaddf14151122891eff81b99af
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = interfaceinvoke r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)>
		SHA-256: c3a0593a06a11b72636ea68511168eac70a6d61227ce60af759413a4dee6fce
		Secure: true
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer150)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: f7b1e0cb0e92b820297acc729d867ddfd49d1f22370a2e012a8b466908cbf0a9
		Secure: false
	Object:
		Variable: varReplacer62
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer62)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 70e9da21a0c74bfa9ce2ea66fb6d263f722c285b7bb76dcf76b42166e0ea39b2
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r5 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 835f0dab1e95a312fe12093b00f18a7bf7711b3247823b274962c2e847aa26ab
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 8c18290abe5d9844789bc7a828d5264beb4f654fe2e24a779a69a8323fb902cf
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer58)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 6197e2d151b7afff1c0867d5df3e0c27653d4df0ed019032025f998b43b22956
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer74)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: d400e009278bce4dbe5c0fb0b3f40e9145235db57fe4806a61e0da8393620a8e
		Secure: false
	Object:
		Variable: r8
		Type: java.security.MessageDigest
		Statement: r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.RsaMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 9ef6a541c87c5d87387ff3b663677a1731956c669f8fdd2a96178461655397d3
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer149)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 4a50e2b68144e97f8d0d0e885dd7ae9fd1569c3ce6df0d9c3be07a955ae2cbd2
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: dc2b2b245eb3f7b6220394e38dc14f99c84fbecd82e47947c4b2f374da632582
		Secure: false
	Object:
		Variable: varReplacer74
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer74)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 57578c68c57c5ba3863254fb08553c61173f256b7c1d8e60e4dfb8b04ddd9ade
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer112)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 182aa131d78b26bd66bfa7c5bd5769b585d1ec99397a795772e168c3311c08ad
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer126)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 417cbc87748af1c4d01e84f1ca203bbc0abdbbbb1579b3c066ff930be88f3aaa
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer142)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: ee027715f8f7ba23a10c655a062268fbbeb787eeb635c3c4c956bf62f2dfa404
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Mac
		Statement: r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer59)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: dedd3ba1ba1b772e2d9bce00dcdaf5c36dfd6b339dd9b92be48723f7a7c4cf9b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.RsaMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 9ef4e1ef117122c4fb82cc38aa4475e55af497d1817040466cca7c30c0245838
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: a082eda1b07049b1989ac93a01bef16399fc0d4001185b06b68e40c8d544a56e
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.RsaMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 5027024a21b95027321bcc5c40097794e6c7e1f663c709a544876705cb5a3662
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.EncryptionEngine: void <clinit>()>
		SHA-256: ca7fce5ab181b1ea41de8aaf3ebfd1bd93ab8f4361775b855358b7e4ba38bec1
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: ff8403917f5c39b93de29b80699c950c4c3808b9993069d6ed07589b4b8c1891
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: b53a7e2658269806f91810d5558a4a8c7ac72eaf92461fbb29d3533e835186f4
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer40)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 9f6a582083f32bee30e0de9bea51a93b0595fb4e35e169f93a348d199ee83df3
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r18.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)>
		SHA-256: 43f66e7202950a326b8df9d670c63aa3cc3f2292f3bfa939a254a6eff4a3ddaf
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: c4bb54c99e52455972de6b2633274c5d41ae709bd235b05464091b369e711ad5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 76a45a0c35e548617caa6c93ad9c1023769f0cfff94748c3bb9d92b87d128ff9
		Secure: false
	Object:
		Variable: varReplacer128
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer128)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 5d15a069d4b3c54d1dcef1c6aa67e2a2e800c05cd01281fd4fbc2f30637cfcae
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer62)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 6860d0534f08a6f0432fdb271c13e1b38db50be420729cd0f793519c8b07c5e6
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r8 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 72e90b92fb6a05450648cbf71457ec8eb4fd52b44ac9ca42120aa4ac2c905a48
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Mac
		Statement: r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer119)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: a980401df669f32599c5b330ff650d2f49e1e6b04b11ab2c8ed23acf0e59d00c
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke r4.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 847db5974eab93934b342051e8580b14c5e78fc4b56622739138619bfa40b195
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 2117dab19e9ec2bff2863d57cd1da7295a8d3eb9614d2b5c2692deba96a3bed8
		Secure: false
	Object:
		Variable: varReplacer143
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer143)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 786367c447d6bde2f3a758e5f20b4154d14672b73f0e2cd6468f067b531ee35e
		Secure: false
	Object:
		Variable: varReplacer58
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer58)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: b18ef6e67c45f813413066c26271151989deccd89e43b72039bf9af0697b04c4
		Secure: false
	Object:
		Variable: varReplacer150
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer150)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 40719bb8a64b7b712629c3c8094c2a9da3e8c8a1f86277616e24bd20283ec973
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.KeyGenerator
		Statement: r18 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)>
		SHA-256: 1d844d733bed116a3ff22cf52414f9e805de9e85c26d00041070cd73e0bf7dbc
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Mac
		Statement: r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer41)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 4d9ed3080fd794917ea4e563b89e8a08812e1f170ed4c015189b2ecfa3b054f8
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 843dfedeea198c0a432b8ce35603b42a49621495d576db098fe6be2a9d7c007b
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: da4c583fdc49be23798f8a5053bc7bfa70977ef99cfb996eb875b434952f4ba8
		Secure: false

Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum

	 in Method: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #9f6a582083f32bee30e0de9bea51a93b0595fb4e35e169f93a348d199ee83df3)
			Second parameter (with value "ARCFOUR") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer40)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Mac: void init(java.security.Key)>(r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer40)


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption

	 in Method: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #493a6e4ef001a1f384288514234f56839561874865a9f0f6dd6071cad99dd5eb)
			Unexpected call to method doFinal on object of type javax.crypto.Mac. Expect a call to one of the following methods init
			at statement: $r4 = virtualinvoke r6.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)


	 in Method: byte[] processCipher(boolean,byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d400e009278bce4dbe5c0fb0b3f40e9145235db57fe4806a61e0da8393620a8e)
			Second parameter (with value "ARCFOUR") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer74)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer74)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ac578054f0471a3e285acfbac1e58feba95e3c149d001c200f64a269c3a0b620)
			First parameter (with value "ARCFOUR") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer76)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer75, r3)


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption

	 in Method: byte[] processCipher(boolean,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer114, r3, r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #182aa131d78b26bd66bfa7c5bd5769b585d1ec99397a795772e168c3311c08ad)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer112)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer112)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #55e2a3b527f689244d522d12dcb751043ac5373e4004b8e6f8a5dad2f9cc288c)
			First parameter (with value "DESede/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer115)


	 in Method: byte[] processChecksum(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generated Key
			at statement: virtualinvoke r3.<javax.crypto.Mac: void init(java.security.Key)>(r7)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #92f823695b464b5db0fa2e62da6e97b415a0dab55b480da82a0f95ac6c70fa24)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer117)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer117)


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption

	 in Method: byte[] processCipher(boolean,byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8345326d83058c34f77d908e3becd2afdac9710123121783bb92755b5c0a3e4a)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer128)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #417cbc87748af1c4d01e84f1ca203bbc0abdbbbb1579b3c066ff930be88f3aaa)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer126)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer130, r3, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer128)


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption

	 in Method: byte[] processCipher(boolean,byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f2781398497dc451febb47f669a86f821b77292b034c7538b857508ce3ef4b10)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer143)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ee027715f8f7ba23a10c655a062268fbbeb787eeb635c3c4c956bf62f2dfa404)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer142)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer143)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer140, r3, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey

	 in Method: byte[] calculateChecksum(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f7b1e0cb0e92b820297acc729d867ddfd49d1f22370a2e012a8b466908cbf0a9)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer150)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4a50e2b68144e97f8d0d0e885dd7ae9fd1569c3ce6df0d9c3be07a955ae2cbd2)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer149)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer154, r3, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer150)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer154, r3, r4)


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory

	 in Method: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)
		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #1d844d733bed116a3ff22cf52414f9e805de9e85c26d00041070cd73e0bf7dbc)
			Unexpected call to method init on object of type javax.crypto.KeyGenerator. Expect a call to one of the following methods generateKey
			at statement: virtualinvoke r18.<javax.crypto.KeyGenerator: void init(int)>(varReplacer191)


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption

	 in Method: byte[] processCipher(boolean,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer64, r3, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer62)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: byte[] processChecksum(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer58)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generated Key
			at statement: virtualinvoke r3.<javax.crypto.Mac: void init(java.security.Key)>(r7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 61

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 24
	ConstraintError: 12
	TypestateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 15 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 19.62 s

real	0m23.030s
user	1m13.036s
sys	0m0.905s

ProjectBoundaryForAnalysis-04
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.214 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: b96460e0234406b603cb8a5d1ffb3c48c2e7788a03a9531b0b9651fd8988a708
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2779)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: e422a9b7508a6a6c7dbf3a7628ce1cae429bd98698921d4f4d104129baecc432
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.SecretKeyFactory
		Statement: r26 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2780)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: e6319ba3f0f5824307666d711085bbca69778d730861dca3249d78b48207d049
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: r7 = virtualinvoke r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 13d73904498f07cef04cbf5d2a546a0ba1c0d7132b29de6eedc9694a102ab0de
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 84e930632df9664b107228b6280e0c9ed6ba6e426e75a7d270b9f5e74faf7f88
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r5, varReplacer2781)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 9f7af2760949bed07bac204651d628970266b8cbe0f39b900183391d4630a83c
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 36d1fb7ce072dfede88678821b19b7a25daeed465634144f21690e9fe9b7d41b
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2777)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: a93f12b992b1c88e89a1f7d3ace9207f8d946564b520fa690fb9c230effbb505
		Secure: false

Findings in Java Class: org.apache.taverna.ui.perspectives.myexperiment.model.Util

	 in Method: byte[] doEncryption(java.lang.String,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a93f12b992b1c88e89a1f7d3ace9207f8d946564b520fa690fb9c230effbb505)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2777)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r13.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r5, varReplacer2781)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e422a9b7508a6a6c7dbf3a7628ce1cae429bd98698921d4f4d104129baecc432)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2779)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #e6319ba3f0f5824307666d711085bbca69778d730861dca3249d78b48207d049)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r26 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2780)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #9f7af2760949bed07bac204651d628970266b8cbe0f39b900183391d4630a83c)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r13.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r5, varReplacer2781)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r2 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r2, r27)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
	ForbiddenMethodError: 1
	ConstraintError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.316 s

real	0m7.937s
user	0m30.649s
sys	0m0.662s

ProjectBoundaryForAnalysis-05
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.089 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 9 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: r20
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r4)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9dac9b14e36a227ee6845dc2e7a10fa18e554c48c865aacc69963669e8ca6a35
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: e7a92ae4c949cc8c9ce642865027ef3df44613accf9fdc3e826757f6b3e2a5a1
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer947)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: ed6ae867d6af5217ce51e6deb8e9b5d5e552436abe339301c29d1393cf50a513
		Secure: false
	Object:
		Variable: r27
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String decrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6978c440a310afca7767210a40d0fb94750a3226965a1a27e2a4ba878ff03f0f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: byte[] getSecureRandom()>
		SHA-256: 59be58b0e60919871c7d91af7dd88016ed9d36455e4302426623ef0d424b8b4f
		Secure: true
	Object:
		Variable: varReplacer950
		Type: java.lang.String
		Statement: specialinvoke r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer950)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 66a93c17dc722e62d9dbe80a0236d0d5544de161f79bdfcf28010ce98a817e71
		Secure: false
	Object:
		Variable: r24
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r11, varReplacer945, varReplacer946)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 74b80f4d074daaf3d80a57d9a4653e52dec7606ef40b8cdddc4f20536f004cc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer937)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.security.MessageDigest startHash()>
		SHA-256: 19b4498f87d43bcc6747ccc4b5dcdbfcf9211fdc00454aea19c2946aedd748d5
		Secure: false
	Object:
		Variable: r25
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer950)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: a096a25f759b6b9528ece44b9fc9cbe4b7147978791d7bfea4ab59cb9bb7593f
		Secure: false
	Object:
		Variable: r13
		Type: byte[]
		Statement: r13 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String getHashValue(java.security.MessageDigest)>
		SHA-256: 7ab0b8d4927e7e73045d80aa7de2446f7c9202b5f26b627a76ef58010c707ed
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.SecretKeyFactory
		Statement: r22 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer949)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 6bb5660901c8dcccdf36ae5305dd38ed029190838754eac96cbf23d7d8fd5ec9
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKey
		Statement: r4 = virtualinvoke r22.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 334727502255e7ea29e6a568ae12c313685c72a0e5a00d5589c2837bf30f8059
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: byte[] getSecureRandom()>
		SHA-256: 5d95018a15f9c29fc61034ebbcb500de8366551707cb6981d4dd3e11cb255260
		Secure: true
	Object:
		Variable: varReplacer946
		Type: int
		Statement: specialinvoke r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r11, varReplacer945, varReplacer946)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 4f4705e6304c89bdb68ac343286420deb8e14a53af1b9a43d5128e291e7c7907
		Secure: false

Findings in Java Class: org.apache.manifoldcf.core.system.ManifoldCF

	 in Method: java.security.MessageDigest startHash()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #19b4498f87d43bcc6747ccc4b5dcdbfcf9211fdc00454aea19c2946aedd748d5)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer937)


	 in Method: java.lang.String getHashValue(java.security.MessageDigest)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #19b4498f87d43bcc6747ccc4b5dcdbfcf9211fdc00454aea19c2946aedd748d5)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r13 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()


	 in Method: javax.crypto.Cipher getCipher(org.apache.manifoldcf.core.interfaces.IThreadContext,int,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ed6ae867d6af5217ce51e6deb8e9b5d5e552436abe339301c29d1393cf50a513)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: return $r4


	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ed6ae867d6af5217ce51e6deb8e9b5d5e552436abe339301c29d1393cf50a513)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #6978c440a310afca7767210a40d0fb94750a3226965a1a27e2a4ba878ff03f0f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke r28.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r4, $r13)


	 in Method: java.lang.String encrypt(java.lang.String,java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #9dac9b14e36a227ee6845dc2e7a10fa18e554c48c865aacc69963669e8ca6a35)
			Unexpected call to method close on object of type javax.crypto.CipherOutputStream. Expect a call to one of the following methods write
			at statement: virtualinvoke r5.<javax.crypto.CipherOutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ed6ae867d6af5217ce51e6deb8e9b5d5e552436abe339301c29d1393cf50a513)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r4)


	 in Method: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer950)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #74b80f4d074daaf3d80a57d9a4653e52dec7606ef40b8cdddc4f20536f004cc)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r11, varReplacer945, varReplacer946)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r11, varReplacer945, varReplacer946)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #6bb5660901c8dcccdf36ae5305dd38ed029190838754eac96cbf23d7d8fd5ec9)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r22 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer949)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #74b80f4d074daaf3d80a57d9a4653e52dec7606ef40b8cdddc4f20536f004cc)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r11, varReplacer945, varReplacer946)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #74b80f4d074daaf3d80a57d9a4653e52dec7606ef40b8cdddc4f20536f004cc)
			First parameter should never be hardcoded.
			at statement: specialinvoke r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r11, varReplacer945, varReplacer946)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r4 = virtualinvoke r22.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #74b80f4d074daaf3d80a57d9a4653e52dec7606ef40b8cdddc4f20536f004cc)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r4 = virtualinvoke r22.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r6, r7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 5
	RequiredPredicateError: 4
	HardCodedError: 1
	TypestateError: 2
	ConstraintError: 3
	NeverTypeOfError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.819 s

real	0m8.198s
user	0m32.500s
sys	0m0.527s

ProjectBoundaryForAnalysis-06
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.058 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1006)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: java.lang.String apply(java.lang.String)>
		SHA-256: 5e1a9ca01ad72c7e05187bbb6e4249a8737f8b73f56c9d77240169ca8b8179f2
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: $r7 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: java.lang.String apply(java.lang.String)>
		SHA-256: da1b5d76a652d29730ba679f10c5fb33e60b3437783a64e14fce117d6a69f4a4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: void <init>(org.apache.meecrowave.Meecrowave$ValueTransformers)>
		SHA-256: 45521255c2fb065624a47e3b6a0c6c8a352b28af01515dd11e9fc71d7c907729
		Secure: false
	Object:
		Variable: varReplacer1004
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: void <init>(org.apache.meecrowave.Meecrowave$ValueTransformers)>
		SHA-256: 4b972e4adce19b4add0cc5a801306634ca07f1fb8ee179337624568e7766fbf9
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: java.lang.String apply(java.lang.String)>
		SHA-256: 5f8faf4f48703d417c726a1d285826b7646de33f4f92662bfd37876e42bbc59d
		Secure: false

Findings in Java Class: org.apache.meecrowave.Meecrowave$ValueTransformers$1

	 in Method: void <init>(org.apache.meecrowave.Meecrowave$ValueTransformers)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #45521255c2fb065624a47e3b6a0c6c8a352b28af01515dd11e9fc71d7c907729)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)


	 in Method: java.lang.String apply(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5e1a9ca01ad72c7e05187bbb6e4249a8737f8b73f56c9d77240169ca8b8179f2)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1006)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1008, $r5)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.729 s

real	0m7.236s
user	0m29.829s
sys	0m0.513s

ProjectBoundaryForAnalysis-07
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 15.06 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 33 analysis seeds within 9 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

Exception in thread "main" java.lang.StackOverflowError
	at wpds.impl.WeightedPushdownSystem.<init>(WeightedPushdownSystem.java:29)
	at sync.pds.solver.SyncPDSSolver$1.<init>(SyncPDSSolver.java:63)
	at sync.pds.solver.SyncPDSSolver.<init>(SyncPDSSolver.java:63)
	at boomerang.solver.AbstractBoomerangSolver.<init>(AbstractBoomerangSolver.java:190)
	at boomerang.solver.BackwardBoomerangSolver.<init>(BackwardBoomerangSolver.java:155)
	at boomerang.WeightedBoomerang$4.<init>(WeightedBoomerang.java:278)
	at boomerang.WeightedBoomerang.createBackwardSolver(WeightedBoomerang.java:278)
	at boomerang.WeightedBoomerang$1.createItem(WeightedBoomerang.java:128)
	at boomerang.WeightedBoomerang$1.createItem(WeightedBoomerang.java:121)
	at heros.utilities.DefaultValueMap.getOrCreate(DefaultValueMap.java:50)
	at boomerang.WeightedBoomerang.backwardSolve(WeightedBoomerang.java:1127)
	at boomerang.WeightedBoomerang.solve(WeightedBoomerang.java:1109)
	at boomerang.callgraph.ObservableDynamicICFG.queryForCallees(ObservableDynamicICFG.java:314)
	at boomerang.callgraph.ObservableDynamicICFG.addCalleeListener(ObservableDynamicICFG.java:293)
	at boomerang.callgraph.BackwardsObservableICFG.addCalleeListener(BackwardsObservableICFG.java:96)
	at boomerang.solver.BackwardBoomerangSolver.callFlow(BackwardBoomerangSolver.java:213)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:244)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at sync.pds.solver.SyncPDSSolver.solve(SyncPDSSolver.java:445)
	at sync.pds.solver.SyncPDSSolver.solve(SyncPDSSolver.java:450)
	at boomerang.WeightedBoomerang.backwardSolve(WeightedBoomerang.java:1129)
	at boomerang.WeightedBoomerang.solve(WeightedBoomerang.java:1109)
	at boomerang.callgraph.ObservableDynamicICFG.queryForCallees(ObservableDynamicICFG.java:314)
	at boomerang.callgraph.ObservableDynamicICFG.addCalleeListener(ObservableDynamicICFG.java:293)
	at boomerang.callgraph.BackwardsObservableICFG.addCalleeListener(BackwardsObservableICFG.java:96)
	at boomerang.solver.BackwardBoomerangSolver.callFlow(BackwardBoomerangSolver.java:213)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:244)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$UpdateTransitivePopListener.onOutTransitionAdded(PostStar.java:95)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$HandlePopListener.onOutTransitionAdded(PostStar.java:157)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:50)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:247)
	at sync.pds.solver.SyncPDSSolver.processPop(SyncPDSSolver.java:607)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:476)
	at boomerang.solver.AbstractBoomerangSolver.access$000(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$ReturnFlowCallerListener.onCallerAdded(AbstractBoomerangSolver.java:150)
	at boomerang.solver.AbstractBoomerangSolver$ReturnFlowCallerListener.onCallerAdded(AbstractBoomerangSolver.java:78)
	at boomerang.callgraph.ObservableDynamicICFG.addCallerListener(ObservableDynamicICFG.java:393)
	at boomerang.callgraph.BackwardsObservableICFG.addCallerListener(BackwardsObservableICFG.java:101)
	at boomerang.solver.AbstractBoomerangSolver.returnFlow(AbstractBoomerangSolver.java:486)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:246)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandlePushListener.onOutTransitionAdded(PostStar.java:298)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:48)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.addReachable(AbstractBoomerangSolver.java:647)
	at boomerang.solver.BackwardBoomerangSolver$CallSiteCalleeListener.onCalleeAdded(BackwardBoomerangSolver.java:102)
	at boomerang.solver.BackwardBoomerangSolver$CallSiteCalleeListener.onCalleeAdded(BackwardBoomerangSolver.java:64)
	at boomerang.callgraph.ObservableDynamicICFG.addCallIfNotInGraph(ObservableDynamicICFG.java:459)
	at boomerang.callgraph.ObservableDynamicICFG.addCalleeListener(ObservableDynamicICFG.java:288)
	at boomerang.callgraph.BackwardsObservableICFG.addCalleeListener(BackwardsObservableICFG.java:96)
	at boomerang.solver.BackwardBoomerangSolver.callFlow(BackwardBoomerangSolver.java:213)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:244)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$UpdateTransitivePopListener.onOutTransitionAdded(PostStar.java:95)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$HandlePopListener.onOutTransitionAdded(PostStar.java:157)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:50)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:247)
	at sync.pds.solver.SyncPDSSolver.processPop(SyncPDSSolver.java:607)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:476)
	at boomerang.solver.AbstractBoomerangSolver.access$000(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$ReturnFlowCallerListener.onCallerAdded(AbstractBoomerangSolver.java:150)
	at boomerang.solver.AbstractBoomerangSolver$ReturnFlowCallerListener.onCallerAdded(AbstractBoomerangSolver.java:78)
	at boomerang.callgraph.ObservableDynamicICFG.addCallerListener(ObservableDynamicICFG.java:393)
	at boomerang.callgraph.BackwardsObservableICFG.addCallerListener(BackwardsObservableICFG.java:101)
	at boomerang.solver.AbstractBoomerangSolver.returnFlow(AbstractBoomerangSolver.java:486)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:246)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.addCallRule(AbstractBoomerangSolver.java:249)
	at sync.pds.solver.SyncPDSSolver.addNormalCallFlow(SyncPDSSolver.java:499)
	at sync.pds.solver.SyncPDSSolver.processNormal(SyncPDSSolver.java:495)
	at sync.pds.solver.SyncPDSSolver.propagate(SyncPDSSolver.java:472)
	at boomerang.solver.BackwardBoomerangSolver.normalFlow(BackwardBoomerangSolver.java:262)
	at boomerang.solver.BackwardBoomerangSolver.computeSuccessor(BackwardBoomerangSolver.java:248)
	at sync.pds.solver.SyncPDSSolver.processNode(SyncPDSSolver.java:460)
	at boomerang.solver.AbstractBoomerangSolver.access$701(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$5.run(AbstractBoomerangSolver.java:547)
	at boomerang.solver.AbstractBoomerangSolver.submit(AbstractBoomerangSolver.java:657)
	at boomerang.solver.AbstractBoomerangSolver.processNode(AbstractBoomerangSolver.java:544)
	at sync.pds.solver.SyncPDSSolver.setCallingContextReachable(SyncPDSSolver.java:671)
	at sync.pds.solver.SyncPDSSolver.access$500(SyncPDSSolver.java:54)
	at sync.pds.solver.SyncPDSSolver$CallAutomatonListener.onWeightAdded(SyncPDSSolver.java:433)
	at wpds.impl.WeightedPAutomaton.addWeightForTransition(WeightedPAutomaton.java:271)
	at sync.pds.solver.SyncPDSSolver$4.addWeightForTransition(SyncPDSSolver.java:170)
	at wpds.impl.PostStar.update(PostStar.java:411)
	at wpds.impl.PostStar.access$100(PostStar.java:24)
	at wpds.impl.PostStar$HandleNormalListener.onOutTransitionAdded(PostStar.java:239)
	at wpds.impl.WeightedPAutomaton.registerListener(WeightedPAutomaton.java:319)
	at wpds.impl.PostStar$PostStarUpdateListener.onRuleAdded(PostStar.java:46)
	at wpds.impl.WeightedPushdownSystem.addRule(WeightedPushdownSystem.java:40)
	at sync.pds.solver.SyncPDSSolver.addCallRule(SyncPDSSolver.java:642)
	at boomerang.solver.AbstractBoomerangSolver.access$401(AbstractBoomerangSolver.java:76)
	at boomerang.solver.AbstractBoomerangSolver$3.run(AbstractBoomerangSolver.java:252)

real	0m46.840s
user	2m10.065s
sys	0m2.110s

ProjectBoundaryForAnalysis-08
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.263 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: a0c229120fab8a80e813b4955e1190f2cef4ba9186d15d686670ff27e7582eb4
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.tika.parser.digest.InputStreamDigester: boolean digestStream(java.io.InputStream,org.apache.tika.metadata.Metadata)>
		SHA-256: 69dd361e90a024baf5f0fe6c08ce1fc3f50a50a2203785f567c20d343bce250d
		Secure: true
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r15, $r14)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.apache.tika.parser.digest.InputStreamDigester: java.security.MessageDigest newMessageDigest()>
		SHA-256: b00569a64e6f512296f19f2748cbb95371e93e6e69b4bb3a4876bfba5cfb6d62
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r1, r18)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: 6b2b301564c198cd8234e4ddf8d0817323003a7b0bb5d5e47306613f15a076c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r1, r7)
		Method: <org.apache.tika.parser.digest.InputStreamDigester: java.security.MessageDigest newMessageDigest()>
		SHA-256: c42666987c6c24c6e832a184d167156e9523f4d084e6d546b09e948d3a6ac84b
		Secure: true

Findings in Java Class: org.apache.tika.parser.CryptoParser

	 in Method: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared Alg
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer1495, r5, r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a0c229120fab8a80e813b4955e1190f2cef4ba9186d15d686670ff27e7582eb4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r1, r18)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r1, r18)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a0c229120fab8a80e813b4955e1190f2cef4ba9186d15d686670ff27e7582eb4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r15, $r14)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r15, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>(varReplacer1496, r5, r6, r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1493, r5)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1493, r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a0c229120fab8a80e813b4955e1190f2cef4ba9186d15d686670ff27e7582eb4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)


Findings in Java Class: org.apache.tika.parser.digest.InputStreamDigester

	 in Method: boolean digestStream(java.io.InputStream,org.apache.tika.metadata.Metadata)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #b00569a64e6f512296f19f2748cbb95371e93e6e69b4bb3a4876bfba5cfb6d62)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r3 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c42666987c6c24c6e832a184d167156e9523f4d084e6d546b09e948d3a6ac84b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r3 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 6

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 2
	RequiredPredicateError: 3
	IncompleteOperationError: 6
	ForbiddenMethodError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.786 s

real	0m8.150s
user	0m32.843s
sys	0m0.578s

ProjectBoundaryForAnalysis-09
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 3.228 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 3 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 9cefefa844b2941c35ad0ca14e1029c1c6cff6bb0d3e2c44dd8823156577e78e
		Secure: false
	Object:
		Variable: varReplacer4001
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: void <clinit>()>
		SHA-256: 92c7401881758abdc9db49a04d13547d01b436155e2a60bea4bf9fd7a3cc2f4c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: void <clinit>()>
		SHA-256: f9b6e79e6436b7166c2ac91d2a565ae568e45ff52185cae80ec4edaa75b81688
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r3 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 9db9e019b34011f602eacf23d71360c8337f0baf58d6892a9b91fc509a6e1d11
		Secure: false
	Object:
		Variable: r11
		Type: javax.crypto.Cipher
		Statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3996)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 61998c49ca83240a24ea16f900cc80e6ce84aa9af2eb01d48426636bbf4994ef
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: 18f079ac154551fd963177a5bf2b04860b7ddb552c8cafa280831e708f4b89bb
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: r3 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: 530c31b7286283e628ca83fb413074450942868f5142fde121f4413beb535978
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3999)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: 4f0dbe59872bf0836d77e4fffc84657e95f214cb67bf65b5af70c0baf31fdb74
		Secure: false
	Object:
		Variable: r18
		Type: java.security.MessageDigest
		Statement: r18 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: 7c39af5b2f9802c7e542762063e4a1e8d5f08eb413fca23179d1bc32c1290ae6
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: 8d2185b2560338c6bbbacd9d36648bcc961396379fb9ae4018742f74e7b6b86b
		Secure: false
	Object:
		Variable: r44
		Type: java.security.SecureRandom
		Statement: specialinvoke r44.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.openejb.assembler.DeployerEjb: void <clinit>()>
		SHA-256: ea8257a2094df5c0a3aed15fa8d6df9afdf297fc85fa06cf71014c251491a706
		Secure: true
	Object:
		Variable: r11
		Type: byte[]
		Statement: $r8 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: 5bfe4d233c50827cd7e154bbe34756e06eaed73ab2e3915b1270e2fba4b2087c
		Secure: false

Findings in Java Class: org.apache.openejb.cipher.StaticDESPasswordCipher

	 in Method: char[] encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #61998c49ca83240a24ea16f900cc80e6ce84aa9af2eb01d48426636bbf4994ef)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3996)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3995, $r5)


	 in Method: java.lang.String decrypt(char[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3998, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4f0dbe59872bf0836d77e4fffc84657e95f214cb67bf65b5af70c0baf31fdb74)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3999)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f9b6e79e6436b7166c2ac91d2a565ae568e45ff52185cae80ec4edaa75b81688)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
	ConstraintError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 18 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 31.50 s

real	0m34.811s
user	2m1.616s
sys	0m1.374s

ProjectBoundaryForAnalysis-10
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/sharmin/project/ApacheProject/CrySL/CryptoAnalysis/CryptoAnalysis/build/CryptoAnalysis-2.7.2-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.355 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

Ruleset: 
	javax.crypto.spec.GCMParameterSpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.RSAKeyGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Key
	java.security.spec.ECParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.crypto.spec.PBEParameterSpec
	java.security.DigestInputStream
	javax.crypto.spec.DHGenParameterSpec
	java.security.KeyFactory
	java.security.spec.MGF1ParameterSpec
	void
	java.security.KeyPair
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Signature
	java.security.spec.ECGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLParameters
	javax.crypto.CipherOutputStream
	javax.crypto.KeyAgreement
	java.security.DigestOutputStream
	javax.crypto.spec.SecretKeySpec
	java.security.AlgorithmParameters
	javax.crypto.Cipher
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPairGenerator
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyStore
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKey
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	java.security.cert.PKIXParameters
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory

Analyzed Objects: 
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: javax.crypto.Cipher createCipher(javax.crypto.SecretKey,java.security.spec.AlgorithmParameterSpec,int)>
		SHA-256: 31290acc907506b24da0d8038b4d7cbd4ae189fa9ed45bd9220feb09edd9ec5d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke r1.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r2)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: javax.crypto.SecretKey generateSecretKey()>
		SHA-256: 9e7d917f4999a811b1db556dbfbef881cfbdfac02865584e035b8301ab7b74a2
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.SecretKeyFactory
		Statement: r1 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r3)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: javax.crypto.SecretKey generateSecretKey()>
		SHA-256: f691523ec36da39e78acc1c9f1692168eac5b7b434210b69e276f91dd98991f7
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: byte[] crypt(byte[],int)>
		SHA-256: 6f7181c9ec706795fa33ae5e5631d495a855084f0e5716d035275622d57a850
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer281)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: void <clinit>()>
		SHA-256: 3b00a7df65d58aabe4706b81563f0b7d4b9bff8d2c104af6c02d5dcd7ddc492e
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r5 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: byte[] crypt(byte[],int)>
		SHA-256: e8655746c15155c631073c2ce5f338a86d7a200b83a5f2f6b96b2c0d42592e27
		Secure: false

Findings in Java Class: org.apache.wicket.util.crypt.SunJceCrypt

	 in Method: java.security.spec.KeySpec createKeySpec()
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r3)


	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #3b00a7df65d58aabe4706b81563f0b7d4b9bff8d2c104af6c02d5dcd7ddc492e)
			Second parameter (with value 17)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer281)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer281)


	 in Method: javax.crypto.Cipher createCipher(javax.crypto.SecretKey,java.security.spec.AlgorithmParameterSpec,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared O A E P
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r1, r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r1, r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r1, r2)


	 in Method: javax.crypto.SecretKey generateSecretKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r4 = virtualinvoke r1.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 46
	Number of Objects Analyzed: 6

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ConstraintError: 1
	ForbiddenMethodError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 13 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 17.40 s

real	0m20.832s
user	1m7.411s
sys	0m0.968s
