
CryptoAPI-bench
Analyzing JAR: /home/sharmin/project/ApacheProject/CryptoAPI-Bench-master/build/libs/rigorityj-samples-1.0-SNAPSHOT.jar
=======================================
***Violated Rule 5: Used export grade public Key ***Constants: [1024, 1024, 1024, 1024, 1024]
[UnitContainer{unit=s0 = 1024, method='<org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=s0 = 1024, method='<org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=s0 = 1024, method='<org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherBBCase1: void go()>'}, UnitContainer{unit=s0 = 1024, method='<org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=s1 = 1024, method='<org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABPSCase1: void go(int)>'}]
=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes ***Constants: ["DES/ECB/PKCS5Padding", "RC2", "AES/ECB/PKCS5Padding", "RC2", "Blowfish", "RC2", "IDEA", "AES/ECB/PKCS5Padding", "AES/ECB/PKCS5Padding", "RC4", "AES/ECB/PKCS5Padding", "DES/ECB/PKCS5Padding", "DES/ECB/PKCS5Padding", "AES/ECB/PKCS5Padding", "Blowfish", "Blowfish", "Blowfish", "RC4", "IDEA", "IDEA", "Blowfish", "IDEA", "RC4", "RC2", "RC4", "RC2", "RC2", "IDEA", "AES/ECB/PKCS5Padding", "RC4", "IDEA", "Blowfish", "AES/ECB/PKCS5Padding", "IDEA", "DES/ECB/PKCS5Padding", "DES/ECB/PKCS5Padding", "Blowfish", "RC4", "DES/ECB/PKCS5Padding", "DES/ECB/PKCS5Padding", "RC2", "RC4"]
[UnitContainer{unit=r2 = "DES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "RC2", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABMCCase4: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "AES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_11[0] = "RC2", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABSCase4: void <init>()>'}, UnitContainer{unit=$fakeLocal_14[0] = "Blowfish", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase2: void go()>'}, UnitContainer{unit=$fakeLocal_14[0] = "RC2", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4: void go(int)>'}, UnitContainer{unit=r1 = "IDEA", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase15: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "AES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2: void go2()>'}, UnitContainer{unit=$fakeLocal_13[0] = "AES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1: void go(int)>'}, UnitContainer{unit=r2 = "RC4", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABMCCase3: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "AES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_11[0] = "DES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABSCase1: void <init>()>'}, UnitContainer{unit=$fakeLocal_14[0] = "DES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1: void go(int)>'}, UnitContainer{unit=r2 = "AES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "Blowfish", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase12: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "Blowfish", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6: void go2()>'}, UnitContainer{unit=r2 = "Blowfish", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase2: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_14[0] = "RC4", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3: void go(int)>'}, UnitContainer{unit=r2 = "IDEA", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABMCCase5: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "IDEA", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10: void go2()>'}, UnitContainer{unit=$fakeLocal_13[0] = "Blowfish", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2: void go(int)>'}, UnitContainer{unit=r2 = "IDEA", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase9: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "RC4", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase13: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "RC2", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase4: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "RC4", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7: void go2()>'}, UnitContainer{unit=r1 = "RC2", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase14: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "RC2", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8: void go2()>'}, UnitContainer{unit=$fakeLocal_14[0] = "IDEA", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase5: void go()>'}, UnitContainer{unit=$fakeLocal_14[0] = "AES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1: void go()>'}, UnitContainer{unit=r2 = "RC4", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_13[0] = "IDEA", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5: void go(int)>'}, UnitContainer{unit=$fakeLocal_11[0] = "Blowfish", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABSCase2: void <init>()>'}, UnitContainer{unit=r1 = "AES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABSCase1: void <init>()>'}, UnitContainer{unit=$fakeLocal_11[0] = "IDEA", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABSCase5: void <init>()>'}, UnitContainer{unit=$fakeLocal_15[0] = "DES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1: void go()>'}, UnitContainer{unit=$r0 = "DES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5: void go2()>'}, UnitContainer{unit=r2 = "Blowfish", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABMCCase2: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_14[0] = "RC4", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase3: void go()>'}, UnitContainer{unit=r2 = "DES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase11: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "DES/ECB/PKCS5Padding", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_14[0] = "RC2", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase4: void go()>'}, UnitContainer{unit=$fakeLocal_11[0] = "RC4", method='<org.cryptoapi.bench.brokencrypto.BrokenCryptoABSCase3: void <init>()>'}]
=======================================
=============================================
***Violated Rule 13: Untrused PRNG (java.util.Random) Found in <org.cryptoapi.bench.untrustedprng.UntrustedPRNGCase1: void main(java.lang.String[])>
=============================================
=======================================
***Violated Rule 12: Does not manually verify the hostname
***Cause: should have manually verify hostname in <org.cryptoapi.bench.impropersslsocketfactory.ImproperSocketManualHostBBCase1: void main(java.lang.String[])>
=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager ***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase1
=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager ***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2
=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager ***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2
=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager ***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3
=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager ***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3
=======================================
=======================================
***Violated Rule 6: Uses untrusted HostNameVerifier
***Cause: Fixed [1] used in org.cryptoapi.bench.dummyhostnameverifier.DummyHostNameVerifierCase1
=======================================
=======================================
***Violated Rule 2: Found broken hash functions ***Constants: ["SHA1", "MD4", "MD2", "MD4", "MD4", "MD2", "MD5", "SHA1", "SHA1", "MD5", "MD2", "SHA1", "MD2", "MD4", "MD5", "MD5", "MD2", "MD2", "MD5", "MD4", "SHA1", "MD4", "SHA1", "MD5", "MD2", "MD5", "MD4", "SHA1"]
[UnitContainer{unit=r3 = "SHA1", method='<org.cryptoapi.bench.brokenhash.BrokenHashABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "MD4", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase7: void go2()>'}, UnitContainer{unit=r2 = "MD2", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase4: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "MD4", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase11: void main(java.lang.String[])>'}, UnitContainer{unit=r3 = "MD4", method='<org.cryptoapi.bench.brokenhash.BrokenHashABMCCase3: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "MD2", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase12: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_9[0] = "MD5", method='<org.cryptoapi.bench.brokenhash.BrokenHashABPSCase2: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_12[0] = "SHA1", method='<org.cryptoapi.bench.brokenhash.BrokenHashABSCase1: void <init>()>'}, UnitContainer{unit=r2 = "SHA1", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase9: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_9[0] = "MD5", method='<org.cryptoapi.bench.brokenhash.BrokenHashBBCase2: void main(java.lang.String[])>'}, UnitContainer{unit=r3 = "MD2", method='<org.cryptoapi.bench.brokenhash.BrokenHashABMCCase4: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_9[0] = "SHA1", method='<org.cryptoapi.bench.brokenhash.BrokenHashBBCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_9[0] = "MD2", method='<org.cryptoapi.bench.brokenhash.BrokenHashABPSCase4: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_9[0] = "MD4", method='<org.cryptoapi.bench.brokenhash.BrokenHashBBCase3: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "MD5", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase6: void go2()>'}, UnitContainer{unit=r2 = "MD5", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase10: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_14[0] = "MD2", method='<org.cryptoapi.bench.brokenhash.BrokenHashABSCase4: void <init>()>'}, UnitContainer{unit=$r0 = "MD2", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase8: void go2()>'}, UnitContainer{unit=r3 = "MD5", method='<org.cryptoapi.bench.brokenhash.BrokenHashABMCCase2: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_14[0] = "MD4", method='<org.cryptoapi.bench.brokenhash.BrokenHashABSCase3: void <init>()>'}, UnitContainer{unit=$fakeLocal_9[0] = "SHA1", method='<org.cryptoapi.bench.brokenhash.BrokenHashABPSCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_9[0] = "MD4", method='<org.cryptoapi.bench.brokenhash.BrokenHashABPSCase3: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "SHA1", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_14[0] = "MD5", method='<org.cryptoapi.bench.brokenhash.BrokenHashABSCase2: void <init>()>'}, UnitContainer{unit=$fakeLocal_9[0] = "MD2", method='<org.cryptoapi.bench.brokenhash.BrokenHashBBCase4: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "MD5", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase2: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "MD4", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "SHA1", method='<org.cryptoapi.bench.brokenhash.BrokenHashABICase5: void go2()>'}]
=======================================
=======================================
***Violated Rule 3: Used constant keys in code ***Constants: ["SecDev2019", "afix", "defaultkey", "defaultkey", "sagar", 115, "sagar", "saagar", "sagar", "afix", "saagar", "sagar", "defaultkey", "defaultkey"]
[UnitContainer{unit=r1 = "SecDev2019", method='<org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyBBCase1: void main(java.lang.String[])>'}, UnitContainer{unit=interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", "afix"), method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase2: void main(java.lang.String[])>'}, UnitContainer{unit=$fakeLocal_19[0] = "defaultkey", method='<org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABSCase1: void <init>()>'}, UnitContainer{unit=r2 = "defaultkey", method='<org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "sagar", method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=$r4[0] = 115, method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2: void key()>'}, UnitContainer{unit=r1 = "sagar", method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABSCase1: void <init>()>'}, UnitContainer{unit=r1 = "saagar", method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1: void key()>'}, UnitContainer{unit=r2 = "sagar", method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", "afix"), method='<org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase2: void main(java.lang.String[])>'}, UnitContainer{unit=r7 = "saagar", method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1: void key(int)>'}, UnitContainer{unit=r2 = "sagar", method='<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "defaultkey", method='<org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABPSCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r0 = "defaultkey", method='<org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase2: void go2()>'}]
=======================================
=======================================
***Violated Rule 10: Found constant IV in code ***Constants: ["abcde", "abcde", "abcde", "abcde", "abcde", "abcde", "abcde", "abcde"]
[UnitContainer{unit=$r6 = "abcde", method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1: void go()>'}, UnitContainer{unit=$r2 = "abcde", method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABSCase1: void <init>()>'}, UnitContainer{unit=$r7 = "abcde", method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1: void go(int)>'}, UnitContainer{unit=$r2 = "abcde", method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=$r6 = "abcde", method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1: void go()>'}, UnitContainer{unit=$r4 = "abcde", method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r4 = "abcde", method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", "abcde"), method='<org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2: void go()>'}]
=======================================
=======================================
***Violated Rule 9: Found constant salts in code ***Constants: [-94, -94, -94, "aaa", -94, -94, -94]
[UnitContainer{unit=$r2[0] = -94, method='<org.cryptoapi.bench.staticsalts.StaticSaltsBBCase1: void key2()>'}, UnitContainer{unit=$r2[0] = -94, method='<org.cryptoapi.bench.staticsalts.StaticSaltsABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=$r2[0] = -94, method='<org.cryptoapi.bench.staticsalts.StaticSaltsABSCase1: void <init>()>'}, UnitContainer{unit=interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", $r4), method='<org.cryptoapi.bench.staticsalts.StaticSaltsABHCase1: void key2()>'}, UnitContainer{unit=$r4[0] = -94, method='<org.cryptoapi.bench.staticsalts.StaticSaltsABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r4[0] = -94, method='<org.cryptoapi.bench.staticsalts.StaticSaltsABPSCase1: void key2(int)>'}, UnitContainer{unit=$r4[0] = -94, method='<org.cryptoapi.bench.staticsalts.StaticSaltsABMCCase1: void main(java.lang.String[])>'}]
=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE ***Constants: [20, 20, 20, 20, 20, 5]
[UnitContainer{unit=b0 = 20, method='<org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase1: void main()>'}, UnitContainer{unit=$fakeLocal_17[1] = 20, method='<org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEBBCase1: void key2()>'}, UnitContainer{unit=b0 = 20, method='<org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABMCCase1: void main()>'}, UnitContainer{unit=$fakeLocal_15[0] = 20, method='<org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABSCase1: void <init>()>'}, UnitContainer{unit=b0 = 20, method='<org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=s0 = 5, method='<org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABPSCase1: void main(java.lang.String[])>'}]
=======================================
=======================================
***Violated Rule 8a: Used < 1000 iteration for PBE ***Constants: [i0, new java.lang.Integer, i0, @parameter1: int, 1020, staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, 10), i0, b0, @parameter0: int, r0, i0, s0, b0, 11010, 11010, @parameter1: int, i0, 11010, @parameter1: int, 11010, 1020, r0.<java.lang.Integer: int value>, 11010, s0, @parameter0: int, 1020, i0, @parameter1: int, s0, new java.lang.Integer, s0, $i0, 11010, s0, s0, 11010, "bbb", $r6, r1, interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bbb", $r6), @parameter0: int, 11010, s0, 1020, (java.lang.Integer) $r7, 10000, 11010, @parameter0: int, i0, i0, 1020, $i0, r0.<org.cryptoapi.bench.pbeiteration.CryptoPBEIteration1: int defcount>, i0, s0, 1050, 1020, "aaa", $r5, r1, interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", $r5), i0, $i0, 1020, s0, b0, s0, 1020, s0, new java.util.HashMap, i0, 1020, 11010, interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("bbb"), s0, i0, i1, s0, i1, $r4, @parameter0: int, @parameter0: int, @parameter0: int, s0, s1, 1020]
=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code ***Constants: [100, 100, 100, -56, 100, 100, "aaa", -56, 100, 100, 100, "aaa", -56, -56, -56, 100, -56, -56, 100, 100, 100]
[UnitContainer{unit=b0 = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase6: void main(java.lang.String[])>'}, UnitContainer{unit=b0 = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase2: void main(java.lang.String[])>'}, UnitContainer{unit=$r2[0] = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABSCase1: void <init>()>'}, UnitContainer{unit=$r4[1] = -56, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r5[0] = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase2: void main(java.lang.String[])>'}, UnitContainer{unit=$r4[0] = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsBBCase1: void main(java.lang.String[])>'}, UnitContainer{unit=interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", $r9), method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABHCase4: void main(java.lang.String[])>'}, UnitContainer{unit=$r5[1] = -56, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase2: void main(java.lang.String[])>'}, UnitContainer{unit=b0 = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABMCCase2: void main(java.lang.String[])>'}, UnitContainer{unit=$r4[0] = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase1: void main(java.lang.String[])>'}, UnitContainer{unit=b0 = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsBBCase2: void main(java.lang.String[])>'}, UnitContainer{unit=interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", $r5), method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABHCase2: void main(java.lang.String[])>'}, UnitContainer{unit=$r4[1] = -56, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsBBCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r2[1] = -56, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r4[1] = -56, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r4[0] = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=$r2[1] = -56, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABSCase1: void <init>()>'}, UnitContainer{unit=$r2[1] = -56, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase5: void main(java.lang.String[])>'}, UnitContainer{unit=$r2[0] = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase5: void main(java.lang.String[])>'}, UnitContainer{unit=$r2[0] = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=b0 = 100, method='<org.cryptoapi.bench.predictableseeds.PredictableSeedsABSCase2: void <init>()>'}]
=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password ***Constants: ["changeit", "changeit", "changeit", "changeit", "changeit", "changeit", "changeit", "afix"]
[UnitContainer{unit=r2 = "changeit", method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABMCCase1: void main(java.lang.String[])>'}, UnitContainer{unit=r2 = "changeit", method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "changeit", method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABSCase1: void <init>()>'}, UnitContainer{unit=r10 = "changeit", method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABPSCase1: void go(int)>'}, UnitContainer{unit=r3 = "changeit", method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordBBCase1: void go()>'}, UnitContainer{unit=$r0 = "changeit", method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2: void go2()>'}, UnitContainer{unit=r2 = "changeit", method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aaa", "afix"), method='<org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase2: void go()>'}]
=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol ***Constants: ["http://www.google.com", "http://www.facebook.com", "http://www.google.com", "http://www.facebook.com", "http://www.google.com", "http://gmail.com", "http://www.google.com"]
[UnitContainer{unit=$r0 = "http://www.google.com", method='<org.cryptoapi.bench.http.HttpProtocolABICase2: void go2()>'}, UnitContainer{unit=r1 = "http://www.facebook.com", method='<org.cryptoapi.bench.http.HttpProtocolBBCase1: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "http://www.google.com", method='<org.cryptoapi.bench.http.HttpProtocolABICase1: void main(java.lang.String[])>'}, UnitContainer{unit=r3 = "http://www.facebook.com", method='<org.cryptoapi.bench.http.HttpProtocolABPSCase1: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "http://www.google.com", method='<org.cryptoapi.bench.http.HttpProtocolABICase3: void main(java.lang.String[])>'}, UnitContainer{unit=r1 = "http://gmail.com", method='<org.cryptoapi.bench.http.HttpProtocolABSCase1: void <init>()>'}, UnitContainer{unit=r2 = "http://www.google.com", method='<org.cryptoapi.bench.http.HttpProtocolABMCCase1: void main(java.lang.String[])>'}]
=======================================

real	0m17.769s
user	0m41.389s
sys	0m0.646s
